#include <stdio.h>

void insertionSort(int arr[], int n) {
  int i, key, j;
  for (i = 1; i < n; i++) {
    // Pick the element (key) to be inserted
    key = arr[i];

    // Move elements of arr[0..i-1], that are greater than key, to one position ahead
    // of their current position
    j = i - 1;
    while (j >= 0 && arr[j] > key) {
      arr[j + 1] = arr[j];
      j = j - 1;
    }

    // Insert the key at the correct position while preserving the order of duplicates
    int k = j + 1;
    while (k < i && arr[k] == key) {
      k++;
    }
    arr[k] = key;
  }
}

// Function to print the array
void printArray(int arr[], int n) {
  for (int i = 0; i < n; i++) {
    printf("%d ", arr[i]);
  }
  printf("\n");
}

int main() {
  int arr[] = {3, 1, 4, 1, 5, 9, 2, 6, 5, 3};
  int n = sizeof(arr) / sizeof(arr[0]);

  printf("Unsorted array: \n");
  printArray(arr, n);

  insertionSort(arr, n);

  printf("Sorted array: \n");
  printArray(arr, n);

  return 0;
}
