#include <stdio.h>
#include <math.h>
#define MAX_POINTS 100
struct Point {
  int x;
  int y;
};
double distance(struct Point p1, struct Point p2) {
  return sqrt(pow(p2.x - p1.x, 2) + pow(p2.y - p1.y, 2));
}
void findClosestPair(struct Point points[], int n, struct Point* p1, struct Point* p2) {
  double min_dist = INFINITY;
  for (int i = 0; i < n - 1; i++) {
    for (int j = i + 1; j < n; j++) {
      double curr_dist = distance(points[i], points[j]);
      if (curr_dist < min_dist) {
        min_dist = curr_dist;
        p1->x = points[i].x;
        p1->y = points[i].y;
        p2->x = points[j].x;
        p2->y = points[j].y;
      }
    }
  }
}
int main() {
  struct Point points[] = {{1, 2}, {4, 5}, {7, 8}, {3, 1}};
  int n = sizeof(points) / sizeof(points[0]);
  struct Point p1, p2;
  findClosestPair(points, n, &p1, &p2);
  printf("Closest pair: (%d, %d) - (%d, %d)\n", p1.x, p1.y, p2.x, p2.y);
  printf("Minimum distance: %.8lf\n", distance(p1, p2));
  return 0;
}